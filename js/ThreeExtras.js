// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,f){this.r=a;this.g=b;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,f){this.x=a||0;this.y=b||0;this.z=f||0};
THREE.Vector3.prototype={set:function(a,b,f){this.x=a;this.y=b;this.z=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,f=this.y,e=this.z;this.x=f*a.z-e*a.y;this.y=e*a.x-b*a.z;this.z=b*a.y-f*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+f*f+a*a)},distanceToSquared:function(a){var b=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return b*b+f*f+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,f,e){this.x=a||0;this.y=b||0;this.z=f||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,b,f,e){this.x=a;this.y=b;this.z=f;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,f,e=a.objects,g=[];a=0;for(b=e.length;a<b;a++){f=e[a];if(f instanceof THREE.Mesh)g=g.concat(this.intersectObject(f))}g.sort(function(h,j){return h.distance-j.distance});return g},intersectObject:function(a){function b(K,r,C,d){d=d.clone().subSelf(r);C=C.clone().subSelf(r);var k=K.clone().subSelf(r);K=d.dot(d);r=d.dot(C);d=d.dot(k);var q=C.dot(C);C=C.dot(k);k=1/(K*q-r*r);q=(q*d-r*C)*k;K=(K*C-r*d)*k;return q>0&&K>0&&q+K<1}var f,e,g,h,j,c,i,m,s,B,
p,v=a.geometry,y=v.vertices,A=[];f=0;for(e=v.faces.length;f<e;f++){g=v.faces[f];B=this.origin.clone();p=this.direction.clone();h=a.matrix.multiplyVector3(y[g.a].position.clone());j=a.matrix.multiplyVector3(y[g.b].position.clone());c=a.matrix.multiplyVector3(y[g.c].position.clone());i=g instanceof THREE.Face4?a.matrix.multiplyVector3(y[g.d].position.clone()):null;m=a.rotationMatrix.multiplyVector3(g.normal.clone());s=p.dot(m);if(s<0){m=m.dot((new THREE.Vector3).sub(h,B))/s;B=B.addSelf(p.multiplyScalar(m));
if(g instanceof THREE.Face3){if(b(B,h,j,c)){g={distance:this.origin.distanceTo(B),point:B,face:g,object:a};A.push(g)}}else if(g instanceof THREE.Face4)if(b(B,h,j,i)||b(B,j,c,i)){g={distance:this.origin.distanceTo(B),point:B,face:g,object:a};A.push(g)}}}return A}};
THREE.Rectangle=function(){function a(){h=e-b;j=g-f}var b,f,e,g,h,j,c=true;this.getX=function(){return b};this.getY=function(){return f};this.getWidth=function(){return h};this.getHeight=function(){return j};this.getLeft=function(){return b};this.getTop=function(){return f};this.getRight=function(){return e};this.getBottom=function(){return g};this.set=function(i,m,s,B){c=false;b=i;f=m;e=s;g=B;a()};this.addPoint=function(i,m){if(c){c=false;b=i;f=m;e=i;g=m}else{b=b<i?b:i;f=f<m?f:m;e=e>i?e:i;g=g>m?
g:m}a()};this.add3Points=function(i,m,s,B,p,v){if(c){c=false;b=i<s?i<p?i:p:s<p?s:p;f=m<B?m<v?m:v:B<v?B:v;e=i>s?i>p?i:p:s>p?s:p;g=m>B?m>v?m:v:B>v?B:v}else{b=i<s?i<p?i<b?i:b:p<b?p:b:s<p?s<b?s:b:p<b?p:b;f=m<B?m<v?m<f?m:f:v<f?v:f:B<v?B<f?B:f:v<f?v:f;e=i>s?i>p?i>e?i:e:p>e?p:e:s>p?s>e?s:e:p>e?p:e;g=m>B?m>v?m>g?m:g:v>g?v:g:B>v?B>g?B:g:v>g?v:g}a()};this.addRectangle=function(i){if(c){c=false;b=i.getLeft();f=i.getTop();e=i.getRight();g=i.getBottom()}else{b=b<i.getLeft()?b:i.getLeft();f=f<i.getTop()?f:i.getTop();
e=e>i.getRight()?e:i.getRight();g=g>i.getBottom()?g:i.getBottom()}a()};this.inflate=function(i){b-=i;f-=i;e+=i;g+=i;a()};this.minSelf=function(i){b=b>i.getLeft()?b:i.getLeft();f=f>i.getTop()?f:i.getTop();e=e<i.getRight()?e:i.getRight();g=g<i.getBottom()?g:i.getBottom();a()};this.instersects=function(i){return Math.min(e,i.getRight())-Math.max(b,i.getLeft())>=0&&Math.min(g,i.getBottom())-Math.max(f,i.getTop())>=0};this.empty=function(){c=true;g=e=f=b=0;a()};this.isEmpty=function(){return c};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+e+", top: "+f+", bottom: "+g+", width: "+h+", height: "+j+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,f,e,g,h,j,c,i,m,s,B,p,v,y,A){this.n11=a||1;this.n12=b||0;this.n13=f||0;this.n14=e||0;this.n21=g||0;this.n22=h||1;this.n23=j||0;this.n24=c||0;this.n31=i||0;this.n32=m||0;this.n33=s||1;this.n34=B||0;this.n41=p||0;this.n42=v||0;this.n43=y||0;this.n44=A||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,f,e,g,h,j,c,i,m,s,B,p,v,y,A){this.n11=a;this.n12=b;this.n13=f;this.n14=e;this.n21=g;this.n22=h;this.n23=j;this.n24=c;this.n31=i;this.n32=m;this.n33=s;this.n34=B;this.n41=p;this.n42=v;this.n43=y;this.n44=A;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,f){var e=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3;h.sub(a,b).normalize();e.cross(f,h).normalize();g.cross(h,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);this.n31=h.x;
this.n32=h.y;this.n33=h.z;this.n34=-h.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,f=a.y,e=a.z,g=1/(this.n41*b+this.n42*f+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*f+this.n13*e+this.n14)*g;a.y=(this.n21*b+this.n22*f+this.n23*e+this.n24)*g;a.z=(this.n31*b+this.n32*f+this.n33*e+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,f=a.y,e=a.z,g=a.w;a.x=this.n11*b+this.n12*f+this.n13*e+this.n14*g;a.y=this.n21*b+this.n22*f+this.n23*e+this.n24*
g;a.z=this.n31*b+this.n32*f+this.n33*e+this.n34*g;a.w=this.n41*b+this.n42*f+this.n43*e+this.n44*g;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var f=a.n11,e=a.n12,g=a.n13,h=a.n14,j=a.n21,c=a.n22,i=a.n23,m=a.n24,s=a.n31,B=a.n32,
p=a.n33,v=a.n34,y=a.n41,A=a.n42,K=a.n43,r=a.n44,C=b.n11,d=b.n12,k=b.n13,q=b.n14,n=b.n21,o=b.n22,l=b.n23,w=b.n24,u=b.n31,E=b.n32,z=b.n33,x=b.n34,D=b.n41,$=b.n42,M=b.n43,U=b.n44;this.n11=f*C+e*n+g*u+h*D;this.n12=f*d+e*o+g*E+h*$;this.n13=f*k+e*l+g*z+h*M;this.n14=f*q+e*w+g*x+h*U;this.n21=j*C+c*n+i*u+m*D;this.n22=j*d+c*o+i*E+m*$;this.n23=j*k+c*l+i*z+m*M;this.n24=j*q+c*w+i*x+m*U;this.n31=s*C+B*n+p*u+v*D;this.n32=s*d+B*o+p*E+v*$;this.n33=s*k+B*l+p*z+v*M;this.n34=s*q+B*w+p*x+v*U;this.n41=y*C+A*n+K*u+r*D;
this.n42=y*d+A*o+K*E+r*$;this.n43=y*k+A*l+K*z+r*M;this.n44=y*q+A*w+K*x+r*U;return this},multiplySelf:function(a){var b=this.n11,f=this.n12,e=this.n13,g=this.n14,h=this.n21,j=this.n22,c=this.n23,i=this.n24,m=this.n31,s=this.n32,B=this.n33,p=this.n34,v=this.n41,y=this.n42,A=this.n43,K=this.n44,r=a.n11,C=a.n21,d=a.n31,k=a.n41,q=a.n12,n=a.n22,o=a.n32,l=a.n42,w=a.n13,u=a.n23,E=a.n33,z=a.n43,x=a.n14,D=a.n24,$=a.n34;a=a.n44;this.n11=b*r+f*C+e*d+g*k;this.n12=b*q+f*n+e*o+g*l;this.n13=b*w+f*u+e*E+g*z;this.n14=
b*x+f*D+e*$+g*a;this.n21=h*r+j*C+c*d+i*k;this.n22=h*q+j*n+c*o+i*l;this.n23=h*w+j*u+c*E+i*z;this.n24=h*x+j*D+c*$+i*a;this.n31=m*r+s*C+B*d+p*k;this.n32=m*q+s*n+B*o+p*l;this.n33=m*w+s*u+B*E+p*z;this.n34=m*x+s*D+B*$+p*a;this.n41=v*r+y*C+A*d+K*k;this.n42=v*q+y*n+A*o+K*l;this.n43=v*w+y*u+A*E+K*z;this.n44=v*x+y*D+A*$+K*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,f,e){var g=b[f];b[f]=b[e];
b[e]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,f){var e=new THREE.Matrix4;e.n14=a;e.n24=b;e.n34=f;return e};
THREE.Matrix4.scaleMatrix=function(a,b,f){var e=new THREE.Matrix4;e.n11=a;e.n22=b;e.n33=f;return e};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var f=new THREE.Matrix4,e=Math.cos(b),g=Math.sin(b),h=1-e,j=a.x,c=a.y,i=a.z;f.n11=h*j*j+e;f.n12=h*j*c-g*i;f.n13=h*j*i+g*c;f.n21=h*j*c+g*i;f.n22=h*c*c+e;f.n23=h*c*i-g*j;f.n31=h*j*i-g*c;f.n32=h*c*i+g*j;f.n33=h*i*i+e;return f};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var f=b[10]*b[5]-b[6]*b[9],e=-b[10]*b[1]+b[2]*b[9],g=b[6]*b[1]-b[2]*b[5],h=-b[10]*b[4]+b[6]*b[8],j=b[10]*b[0]-b[2]*b[8],c=-b[6]*b[0]+b[2]*b[4],i=b[9]*b[4]-b[5]*b[8],m=-b[9]*b[0]+b[1]*b[8],s=b[5]*b[0]-b[1]*b[4];b=b[0]*f+b[1]*h+b[2]*i;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*f;a.m[1]=b*e;a.m[2]=b*g;a.m[3]=b*h;a.m[4]=b*j;a.m[5]=b*c;a.m[6]=b*i;a.m[7]=b*m;a.m[8]=b*s;return a};
THREE.Matrix4.makeFrustum=function(a,b,f,e,g,h){var j,c,i;j=new THREE.Matrix4;c=2*g/(b-a);i=2*g/(e-f);a=(b+a)/(b-a);f=(e+f)/(e-f);e=-(h+g)/(h-g);g=-2*h*g/(h-g);j.n11=c;j.n12=0;j.n13=a;j.n14=0;j.n21=0;j.n22=i;j.n23=f;j.n24=0;j.n31=0;j.n32=0;j.n33=e;j.n34=g;j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(a,b,f,e){var g;a=f*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,f,e)};
THREE.Matrix4.makeOrtho=function(a,b,f,e,g,h){var j,c,i,m;j=new THREE.Matrix4;c=b-a;i=f-e;m=h-g;a=(b+a)/c;f=(f+e)/i;g=(h+g)/m;j.n11=2/c;j.n12=0;j.n13=0;j.n14=-a;j.n21=0;j.n22=2/i;j.n23=0;j.n24=-f;j.n31=0;j.n32=0;j.n33=-2/m;j.n34=-g;j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,f,e,g){this.a=a;this.b=b;this.c=f;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,f,e,g,h){this.a=a;this.b=b;this.c=f;this.d=e;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=h instanceof Array?h:[h]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,f;a=0;for(b=this.faces.length;a<b;a++){f=this.faces[a];f.centroid.set(0,0,0);if(f instanceof THREE.Face3){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);f.centroid.divideScalar(3)}else if(f instanceof THREE.Face4){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);
f.centroid.addSelf(this.vertices[f.d].position);f.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,f,e,g,h,j,c=new THREE.Vector3,i=new THREE.Vector3;e=0;for(g=this.vertices.length;e<g;e++){h=this.vertices[e];h.normal.set(0,0,0)}e=0;for(g=this.faces.length;e<g;e++){h=this.faces[e];if(a&&h.vertexNormals.length){c.set(0,0,0);b=0;for(f=h.normal.length;b<f;b++)c.addSelf(h.vertexNormals[b]);c.divideScalar(3)}else{b=this.vertices[h.a];f=this.vertices[h.b];j=this.vertices[h.c];c.sub(j.position,
f.position);i.sub(b.position,f.position);c.crossSelf(i)}c.isZero()||c.normalize();h.normal.copy(c)}},computeVertexNormals:function(){var a,b,f=[],e;a=0;for(b=this.vertices.length;a<b;a++)f[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];if(e instanceof THREE.Face3){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal)}else if(e instanceof THREE.Face4){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal);f[e.d].addSelf(e.normal)}}a=
0;for(b=this.vertices.length;a<b;a++)f[a].normalize();a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];if(e instanceof THREE.Face3){e.vertexNormals[0]=f[e.a].clone();e.vertexNormals[1]=f[e.b].clone();e.vertexNormals[2]=f[e.c].clone()}else if(e instanceof THREE.Face4){e.vertexNormals[0]=f[e.a].clone();e.vertexNormals[1]=f[e.b].clone();e.vertexNormals[2]=f[e.c].clone();e.vertexNormals[3]=f[e.d].clone()}}},computeTangents:function(){function a(x,D,$,M,U,V,O){h=x.vertices[D].position;j=x.vertices[$].position;
c=x.vertices[M].position;i=g[U];m=g[V];s=g[O];B=j.x-h.x;p=c.x-h.x;v=j.y-h.y;y=c.y-h.y;A=j.z-h.z;K=c.z-h.z;r=m.u-i.u;C=s.u-i.u;d=m.v-i.v;k=s.v-i.v;q=1/(r*k-C*d);l.set((k*B-d*p)*q,(k*v-d*y)*q,(k*A-d*K)*q);w.set((r*p-C*B)*q,(r*y-C*v)*q,(r*K-C*A)*q);n[D].addSelf(l);n[$].addSelf(l);n[M].addSelf(l);o[D].addSelf(w);o[$].addSelf(w);o[M].addSelf(w)}var b,f,e,g,h,j,c,i,m,s,B,p,v,y,A,K,r,C,d,k,q,n=[],o=[],l=new THREE.Vector3,w=new THREE.Vector3,u=new THREE.Vector3,E=new THREE.Vector3,z=new THREE.Vector3;b=0;
for(f=this.vertices.length;b<f;b++){n[b]=new THREE.Vector3;o[b]=new THREE.Vector3}b=0;for(f=this.faces.length;b<f;b++){e=this.faces[b];g=this.uvs[b];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);
this.vertices[e.c].normal.copy(e.vertexNormals[2]);this.vertices[e.d].normal.copy(e.vertexNormals[3])}}b=0;for(f=this.vertices.length;b<f;b++){z.copy(this.vertices[b].normal);e=n[b];u.copy(e);u.subSelf(z.multiplyScalar(z.dot(e))).normalize();E.cross(this.vertices[b].normal,e);e=E.dot(o[b]);e=e<0?-1:1;this.vertices[b].tangent.set(u.x,u.y,u.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,f=this.vertices.length;b<f;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,f=this.vertices.length;b<f;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(s){var B=[];b=0;for(f=s.length;b<f;b++)s[b]==undefined?B.push("undefined"):B.push(s[b].toString());return B.join("_")}
var b,f,e,g,h,j,c,i,m={};e=0;for(g=this.faces.length;e<g;e++){h=this.faces[e];j=h.materials;c=a(j);if(m[c]==undefined)m[c]={hash:c,counter:0};i=m[c].hash+"_"+m[c].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:j,vertices:0};h=h instanceof THREE.Face3?3:4;if(this.geometryChunks[i].vertices+h>65535){m[c].counter+=1;i=m[c].hash+"_"+m[c].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:j,vertices:0}}this.geometryChunks[i].faces.push(e);
this.geometryChunks[i].vertices+=h}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,f,e){this.fov=a;this.aspect=b;this.near=f;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);g.cross(g.clone(),this.up);this.position.addSelf(g);this.target.position.addSelf(g)};this.translateZ=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);
this.position.subSelf(g);this.target.position.subSelf(g)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,b,f){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.type=f!==undefined?f:THREE.LineContinuous};
THREE.LineContinuous=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;
THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,f,e,g,h){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=h!==undefined?h:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var b,f,e,g={};for(b in a){g[b]={};for(f in a[b]){e=a[b][f];g[b][f]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return g},merge:function(a){var b,f,e,g={};for(b=0;b<a.length;b++){e=this.clone(a[b]);for(f in e)g[f]=e[f]}return g}};
THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,f){this.color=new THREE.Color(a);this.near=b||1;this.far=f||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(o,l){return l.z-o.z}function b(o,l){var w=0,u=1,E=o.z+o.w,z=l.z+l.w,x=-o.z+o.w,D=-l.z+l.w;if(E>=0&&z>=0&&x>=0&&D>=0)return true;else if(E<0&&z<0||x<0&&D<0)return false;else{if(E<0)w=Math.max(w,E/(E-z));else if(z<0)u=Math.min(u,E/(E-z));if(x<0)w=Math.max(w,x/(x-D));else if(D<0)u=Math.min(u,x/(x-D));if(u<w)return false;else{o.lerpSelf(l,w);l.lerpSelf(o,1-u);return true}}}var f,e,g=[],h,j,c,i=[],m,s,B=[],p,v,y=[],A=new THREE.Vector4,K=new THREE.Vector4,r=new THREE.Matrix4,
C=new THREE.Matrix4,d=[],k=new THREE.Vector4,q=new THREE.Vector4,n;this.projectObjects=function(o,l,w){var u=[],E,z;e=0;r.multiply(l.projectionMatrix,l.matrix);d[0]=new THREE.Vector4(r.n41-r.n11,r.n42-r.n12,r.n43-r.n13,r.n44-r.n14);d[1]=new THREE.Vector4(r.n41+r.n11,r.n42+r.n12,r.n43+r.n13,r.n44+r.n14);d[2]=new THREE.Vector4(r.n41+r.n21,r.n42+r.n22,r.n43+r.n23,r.n44+r.n24);d[3]=new THREE.Vector4(r.n41-r.n21,r.n42-r.n22,r.n43-r.n23,r.n44-r.n24);d[4]=new THREE.Vector4(r.n41-r.n31,r.n42-r.n32,r.n43-
r.n33,r.n44-r.n34);d[5]=new THREE.Vector4(r.n41+r.n31,r.n42+r.n32,r.n43+r.n33,r.n44+r.n34);l=0;for(E=d.length;l<E;l++){z=d[l];z.divideScalar(Math.sqrt(z.x*z.x+z.y*z.y+z.z*z.z))}E=o.objects;o=0;for(l=E.length;o<l;o++){z=E[o];var x;if(!(x=!z.visible)){if(x=z instanceof THREE.Mesh){a:{x=void 0;for(var D=z.position,$=-z.geometry.boundingSphere.radius*Math.max(z.scale.x,Math.max(z.scale.y,z.scale.z)),M=0;M<6;M++){x=d[M].x*D.x+d[M].y*D.y+d[M].z*D.z+d[M].w;if(x<=$){x=false;break a}}x=true}x=!x}x=x}if(!x){f=
g[e]=g[e]||new THREE.RenderableObject;A.copy(z.position);r.multiplyVector3(A);f.object=z;f.z=A.z;u.push(f);e++}}w&&u.sort(a);return u};this.projectScene=function(o,l,w){var u=[],E=l.near,z=l.far,x,D,$,M,U,V,O,ba,R,L,N,Z,W,I,S,Y;c=s=v=0;l.autoUpdateMatrix&&l.updateMatrix();r.multiply(l.projectionMatrix,l.matrix);V=this.projectObjects(o,l,true);o=0;for(x=V.length;o<x;o++){O=V[o].object;if(O.visible){O.autoUpdateMatrix&&O.updateMatrix();ba=O.matrix;R=O.rotationMatrix;L=O.materials;N=O.overdraw;if(O instanceof
THREE.Mesh){Z=O.geometry;W=Z.vertices;D=0;for($=W.length;D<$;D++){I=W[D];I.positionWorld.copy(I.position);ba.multiplyVector3(I.positionWorld);M=I.positionScreen;M.copy(I.positionWorld);r.multiplyVector4(M);M.x/=M.w;M.y/=M.w;I.__visible=M.z>E&&M.z<z}Z=Z.faces;D=0;for($=Z.length;D<$;D++){I=Z[D];if(I instanceof THREE.Face3){M=W[I.a];U=W[I.b];S=W[I.c];if(M.__visible&&U.__visible&&S.__visible)if(O.doubleSided||O.flipSided!=(S.positionScreen.x-M.positionScreen.x)*(U.positionScreen.y-M.positionScreen.y)-
(S.positionScreen.y-M.positionScreen.y)*(U.positionScreen.x-M.positionScreen.x)<0){h=i[c]=i[c]||new THREE.RenderableFace3;h.v1.positionWorld.copy(M.positionWorld);h.v2.positionWorld.copy(U.positionWorld);h.v3.positionWorld.copy(S.positionWorld);h.v1.positionScreen.copy(M.positionScreen);h.v2.positionScreen.copy(U.positionScreen);h.v3.positionScreen.copy(S.positionScreen);h.normalWorld.copy(I.normal);R.multiplyVector3(h.normalWorld);h.centroidWorld.copy(I.centroid);ba.multiplyVector3(h.centroidWorld);
h.centroidScreen.copy(h.centroidWorld);r.multiplyVector3(h.centroidScreen);S=I.vertexNormals;n=h.vertexNormalsWorld;M=0;for(U=S.length;M<U;M++){Y=n[M]=n[M]||new THREE.Vector3;Y.copy(S[M]);R.multiplyVector3(Y)}h.z=h.centroidScreen.z;h.meshMaterials=L;h.faceMaterials=I.materials;h.overdraw=N;if(O.geometry.uvs[D]){h.uvs[0]=O.geometry.uvs[D][0];h.uvs[1]=O.geometry.uvs[D][1];h.uvs[2]=O.geometry.uvs[D][2]}u.push(h);c++}}else if(I instanceof THREE.Face4){M=W[I.a];U=W[I.b];S=W[I.c];Y=W[I.d];if(M.__visible&&
U.__visible&&S.__visible&&Y.__visible)if(O.doubleSided||O.flipSided!=((Y.positionScreen.x-M.positionScreen.x)*(U.positionScreen.y-M.positionScreen.y)-(Y.positionScreen.y-M.positionScreen.y)*(U.positionScreen.x-M.positionScreen.x)<0||(U.positionScreen.x-S.positionScreen.x)*(Y.positionScreen.y-S.positionScreen.y)-(U.positionScreen.y-S.positionScreen.y)*(Y.positionScreen.x-S.positionScreen.x)<0)){h=i[c]=i[c]||new THREE.RenderableFace3;h.v1.positionWorld.copy(M.positionWorld);h.v2.positionWorld.copy(U.positionWorld);
h.v3.positionWorld.copy(Y.positionWorld);h.v1.positionScreen.copy(M.positionScreen);h.v2.positionScreen.copy(U.positionScreen);h.v3.positionScreen.copy(Y.positionScreen);h.normalWorld.copy(I.normal);R.multiplyVector3(h.normalWorld);h.centroidWorld.copy(I.centroid);ba.multiplyVector3(h.centroidWorld);h.centroidScreen.copy(h.centroidWorld);r.multiplyVector3(h.centroidScreen);h.z=h.centroidScreen.z;h.meshMaterials=L;h.faceMaterials=I.materials;h.overdraw=N;if(O.geometry.uvs[D]){h.uvs[0]=O.geometry.uvs[D][0];
h.uvs[1]=O.geometry.uvs[D][1];h.uvs[2]=O.geometry.uvs[D][3]}u.push(h);c++;j=i[c]=i[c]||new THREE.RenderableFace3;j.v1.positionWorld.copy(U.positionWorld);j.v2.positionWorld.copy(S.positionWorld);j.v3.positionWorld.copy(Y.positionWorld);j.v1.positionScreen.copy(U.positionScreen);j.v2.positionScreen.copy(S.positionScreen);j.v3.positionScreen.copy(Y.positionScreen);j.normalWorld.copy(h.normalWorld);j.centroidWorld.copy(h.centroidWorld);j.centroidScreen.copy(h.centroidScreen);j.z=j.centroidScreen.z;j.meshMaterials=
L;j.faceMaterials=I.materials;j.overdraw=N;if(O.geometry.uvs[D]){j.uvs[0]=O.geometry.uvs[D][1];j.uvs[1]=O.geometry.uvs[D][2];j.uvs[2]=O.geometry.uvs[D][3]}u.push(j);c++}}}}else if(O instanceof THREE.Line){C.multiply(r,ba);W=O.geometry.vertices;I=W[0];I.positionScreen.copy(I.position);C.multiplyVector4(I.positionScreen);D=1;for($=W.length;D<$;D++){M=W[D];M.positionScreen.copy(M.position);C.multiplyVector4(M.positionScreen);U=W[D-1];k.copy(M.positionScreen);q.copy(U.positionScreen);if(b(k,q)){k.multiplyScalar(1/
k.w);q.multiplyScalar(1/q.w);m=B[s]=B[s]||new THREE.RenderableLine;m.v1.positionScreen.copy(k);m.v2.positionScreen.copy(q);m.z=Math.max(k.z,q.z);m.materials=O.materials;u.push(m);s++}}}else if(O instanceof THREE.Particle){K.set(O.position.x,O.position.y,O.position.z,1);r.multiplyVector4(K);K.z/=K.w;if(K.z>0&&K.z<1){p=y[v]=y[v]||new THREE.RenderableParticle;p.x=K.x/K.w;p.y=K.y/K.w;p.z=K.z;p.rotation=O.rotation.z;p.scale.x=O.scale.x*Math.abs(p.x-(K.x+l.projectionMatrix.n11)/(K.w+l.projectionMatrix.n14));
p.scale.y=O.scale.y*Math.abs(p.y-(K.y+l.projectionMatrix.n22)/(K.w+l.projectionMatrix.n24));p.materials=O.materials;u.push(p);v++}}}}w&&u.sort(a);return u};this.unprojectVector=function(o,l){var w=new THREE.Matrix4;w.multiply(THREE.Matrix4.makeInvert(l.matrix),THREE.Matrix4.makeInvert(l.projectionMatrix));w.multiplyVector3(o);return o}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,f,e,g,h;this.domElement=document.createElement("div");this.setSize=function(j,c){f=j;e=c;g=f/2;h=e/2};this.render=function(j,c){var i,m,s,B,p,v,y,A;a=b.projectScene(j,c);i=0;for(m=a.length;i<m;i++){p=a[i];if(p instanceof THREE.RenderableParticle){y=p.x*g+g;A=p.y*h+h;s=0;for(B=p.material.length;s<B;s++){v=p.material[s];if(v instanceof THREE.ParticleDOMMaterial){v=v.domElement;v.style.left=y+"px";v.style.top=A+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ga){if(p!=ga)m.globalAlpha=p=ga}function b(ga){if(v!=ga){switch(ga){case THREE.NormalBlending:m.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:m.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:m.globalCompositeOperation="darker"}v=ga}}var f=null,e=new THREE.Projector,g=document.createElement("canvas"),h,j,c,i,m=g.getContext("2d"),s=null,B=null,p=1,v=0,y=null,A=null,K=1,r,C,d,k,q,n,o,l,w,u=new THREE.Color,
E=new THREE.Color,z=new THREE.Color,x=new THREE.Color,D=new THREE.Color,$,M,U,V,O,ba,R,L,N,Z=new THREE.Rectangle,W=new THREE.Rectangle,I=new THREE.Rectangle,S=false,Y=new THREE.Color,ha=new THREE.Color,ja=new THREE.Color,t=new THREE.Color,G=Math.PI*2,H=new THREE.Vector3,Q,aa,ka,ea,ra,ta,va=16;Q=document.createElement("canvas");Q.width=Q.height=2;aa=Q.getContext("2d");aa.fillStyle="rgba(0,0,0,1)";aa.fillRect(0,0,2,2);ka=aa.getImageData(0,0,2,2);ea=ka.data;ra=document.createElement("canvas");ra.width=
ra.height=va;ta=ra.getContext("2d");ta.translate(-va/2,-va/2);ta.scale(va,va);va--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ga,sa){h=ga;j=sa;c=h/2;i=j/2;g.width=h;g.height=j;Z.set(-c,-i,c,i)};this.setClearColor=function(ga,sa){s=ga!==null?new THREE.Color(ga):null;B=sa;W.set(-c,-i,c,i);m.setTransform(1,0,0,-1,c,i);this.clear()};this.clear=function(){if(!W.isEmpty()){W.inflate(1);W.minSelf(Z);if(s!==null){b(THREE.NormalBlending);a(1);m.fillStyle=
"rgba("+Math.floor(s.r*255)+","+Math.floor(s.g*255)+","+Math.floor(s.b*255)+","+B+")";m.fillRect(W.getX(),W.getY(),W.getWidth(),W.getHeight())}else m.clearRect(W.getX(),W.getY(),W.getWidth(),W.getHeight());W.empty()}};this.render=function(ga,sa){function Ma(F){var X,T,J,P=F.lights;ha.setRGB(0,0,0);ja.setRGB(0,0,0);t.setRGB(0,0,0);F=0;for(X=P.length;F<X;F++){T=P[F];J=T.color;if(T instanceof THREE.AmbientLight){ha.r+=J.r;ha.g+=J.g;ha.b+=J.b}else if(T instanceof THREE.DirectionalLight){ja.r+=J.r;ja.g+=
J.g;ja.b+=J.b}else if(T instanceof THREE.PointLight){t.r+=J.r;t.g+=J.g;t.b+=J.b}}}function Aa(F,X,T,J){var P,ca,fa,ia,la=F.lights;F=0;for(P=la.length;F<P;F++){ca=la[F];fa=ca.color;ia=ca.intensity;if(ca instanceof THREE.DirectionalLight){ca=T.dot(ca.position)*ia;if(ca>0){J.r+=fa.r*ca;J.g+=fa.g*ca;J.b+=fa.b*ca}}else if(ca instanceof THREE.PointLight){H.sub(ca.position,X);H.normalize();ca=T.dot(H)*ia;if(ca>0){J.r+=fa.r*ca;J.g+=fa.g*ca;J.b+=fa.b*ca}}}}function Na(F,X,T){if(T.opacity!=0){a(T.opacity);
b(T.blending);var J,P,ca,fa,ia,la;if(T instanceof THREE.ParticleBasicMaterial){if(T.map){fa=T.map;ia=fa.width>>1;la=fa.height>>1;P=X.scale.x*c;ca=X.scale.y*i;T=P*ia;J=ca*la;I.set(F.x-T,F.y-J,F.x+T,F.y+J);if(Z.instersects(I)){m.save();m.translate(F.x,F.y);m.rotate(-X.rotation);m.scale(P,-ca);m.translate(-ia,-la);m.drawImage(fa,0,0);m.restore()}}}else if(T instanceof THREE.ParticleCircleMaterial){if(S){Y.r=ha.r+ja.r+t.r;Y.g=ha.g+ja.g+t.g;Y.b=ha.b+ja.b+t.b;u.r=T.color.r*Y.r;u.g=T.color.g*Y.g;u.b=T.color.b*
Y.b;u.updateStyleString()}else u.__styleString=T.color.__styleString;T=X.scale.x*c;J=X.scale.y*i;I.set(F.x-T,F.y-J,F.x+T,F.y+J);if(Z.instersects(I)){P=u.__styleString;if(A!=P)m.fillStyle=A=P;m.save();m.translate(F.x,F.y);m.rotate(-X.rotation);m.scale(T,J);m.beginPath();m.arc(0,0,1,0,G,true);m.closePath();m.fill();m.restore()}}}}function Oa(F,X,T,J){if(J.opacity!=0){a(J.opacity);b(J.blending);m.beginPath();m.moveTo(F.positionScreen.x,F.positionScreen.y);m.lineTo(X.positionScreen.x,X.positionScreen.y);
m.closePath();if(J instanceof THREE.LineBasicMaterial){u.__styleString=J.color.__styleString;F=J.linewidth;if(K!=F)m.lineWidth=K=F;F=u.__styleString;if(y!=F)m.strokeStyle=y=F;m.stroke();I.inflate(J.linewidth*2)}}}function Ia(F,X,T,J,P,ca){if(P.opacity!=0){a(P.opacity);b(P.blending);k=F.positionScreen.x;q=F.positionScreen.y;n=X.positionScreen.x;o=X.positionScreen.y;l=T.positionScreen.x;w=T.positionScreen.y;m.beginPath();m.moveTo(k,q);m.lineTo(n,o);m.lineTo(l,w);m.lineTo(k,q);m.closePath();if(P instanceof
THREE.MeshBasicMaterial)if(P.map)P.map.image.loaded&&P.map.mapping instanceof THREE.UVMapping&&xa(k,q,n,o,l,w,P.map.image,J.uvs[0].u,J.uvs[0].v,J.uvs[1].u,J.uvs[1].v,J.uvs[2].u,J.uvs[2].v);else if(P.env_map){if(P.env_map.image.loaded)if(P.env_map.mapping instanceof THREE.SphericalReflectionMapping){F=sa.matrix;H.copy(J.vertexNormalsWorld[0]);V=(H.x*F.n11+H.y*F.n12+H.z*F.n13)*0.5+0.5;O=-(H.x*F.n21+H.y*F.n22+H.z*F.n23)*0.5+0.5;H.copy(J.vertexNormalsWorld[1]);ba=(H.x*F.n11+H.y*F.n12+H.z*F.n13)*0.5+0.5;
R=-(H.x*F.n21+H.y*F.n22+H.z*F.n23)*0.5+0.5;H.copy(J.vertexNormalsWorld[2]);L=(H.x*F.n11+H.y*F.n12+H.z*F.n13)*0.5+0.5;N=-(H.x*F.n21+H.y*F.n22+H.z*F.n23)*0.5+0.5;xa(k,q,n,o,l,w,P.env_map.image,V,O,ba,R,L,N)}}else P.wireframe?Ba(P.color.__styleString,P.wireframe_linewidth):Ca(P.color.__styleString);else if(P instanceof THREE.MeshLambertMaterial){if(P.map&&!P.wireframe){P.map.mapping instanceof THREE.UVMapping&&xa(k,q,n,o,l,w,P.map.image,J.uvs[0].u,J.uvs[0].v,J.uvs[1].u,J.uvs[1].v,J.uvs[2].u,J.uvs[2].v);
b(THREE.SubtractiveBlending)}if(S)if(!P.wireframe&&P.shading==THREE.SmoothShading&&J.vertexNormalsWorld.length==3){E.r=z.r=x.r=ha.r;E.g=z.g=x.g=ha.g;E.b=z.b=x.b=ha.b;Aa(ca,J.v1.positionWorld,J.vertexNormalsWorld[0],E);Aa(ca,J.v2.positionWorld,J.vertexNormalsWorld[1],z);Aa(ca,J.v3.positionWorld,J.vertexNormalsWorld[2],x);D.r=(z.r+x.r)*0.5;D.g=(z.g+x.g)*0.5;D.b=(z.b+x.b)*0.5;U=Ja(E,z,x,D);xa(k,q,n,o,l,w,U,0,0,1,0,0,1)}else{Y.r=ha.r;Y.g=ha.g;Y.b=ha.b;Aa(ca,J.centroidWorld,J.normalWorld,Y);u.r=P.color.r*
Y.r;u.g=P.color.g*Y.g;u.b=P.color.b*Y.b;u.updateStyleString();P.wireframe?Ba(u.__styleString,P.wireframe_linewidth):Ca(u.__styleString)}else P.wireframe?Ba(P.color.__styleString,P.wireframe_linewidth):Ca(P.color.__styleString)}else if(P instanceof THREE.MeshDepthMaterial){$=sa.near;M=sa.far;E.r=E.g=E.b=1-Ea(F.positionScreen.z,$,M);z.r=z.g=z.b=1-Ea(X.positionScreen.z,$,M);x.r=x.g=x.b=1-Ea(T.positionScreen.z,$,M);D.r=(z.r+x.r)*0.5;D.g=(z.g+x.g)*0.5;D.b=(z.b+x.b)*0.5;U=Ja(E,z,x,D);xa(k,q,n,o,l,w,U,0,
0,1,0,0,1)}else if(P instanceof THREE.MeshNormalMaterial){u.r=Fa(J.normalWorld.x);u.g=Fa(J.normalWorld.y);u.b=Fa(J.normalWorld.z);u.updateStyleString();P.wireframe?Ba(u.__styleString,P.wireframe_linewidth):Ca(u.__styleString)}}}function Ba(F,X){if(y!=F)m.strokeStyle=y=F;if(K!=X)m.lineWidth=K=X;m.stroke();I.inflate(X*2)}function Ca(F){if(A!=F)m.fillStyle=A=F;m.fill()}function xa(F,X,T,J,P,ca,fa,ia,la,oa,ma,pa,ya){var ua,qa;ua=fa.width-1;qa=fa.height-1;ia*=ua;la*=qa;oa*=ua;ma*=qa;pa*=ua;ya*=qa;T-=F;
J-=X;P-=F;ca-=X;oa-=ia;ma-=la;pa-=ia;ya-=la;qa=1/(oa*ya-pa*ma);ua=(ya*T-ma*P)*qa;ma=(ya*J-ma*ca)*qa;T=(oa*P-pa*T)*qa;J=(oa*ca-pa*J)*qa;F=F-ua*ia-T*la;X=X-ma*ia-J*la;m.save();m.transform(ua,ma,T,J,F,X);m.clip();m.drawImage(fa,0,0);m.restore()}function Ja(F,X,T,J){var P=~~(F.r*255),ca=~~(F.g*255);F=~~(F.b*255);var fa=~~(X.r*255),ia=~~(X.g*255);X=~~(X.b*255);var la=~~(T.r*255),oa=~~(T.g*255);T=~~(T.b*255);var ma=~~(J.r*255),pa=~~(J.g*255);J=~~(J.b*255);ea[0]=P<0?0:P>255?255:P;ea[1]=ca<0?0:ca>255?255:
ca;ea[2]=F<0?0:F>255?255:F;ea[4]=fa<0?0:fa>255?255:fa;ea[5]=ia<0?0:ia>255?255:ia;ea[6]=X<0?0:X>255?255:X;ea[8]=la<0?0:la>255?255:la;ea[9]=oa<0?0:oa>255?255:oa;ea[10]=T<0?0:T>255?255:T;ea[12]=ma<0?0:ma>255?255:ma;ea[13]=pa<0?0:pa>255?255:pa;ea[14]=J<0?0:J>255?255:J;aa.putImageData(ka,0,0);ta.drawImage(Q,0,0);return ra}function Ea(F,X,T){F=(F-X)/(T-X);return F*F*(3-2*F)}function Fa(F){F=(F+1)*0.5;return F<0?0:F>1?1:F}function Ga(F,X){var T=X.x-F.x,J=X.y-F.y,P=1/Math.sqrt(T*T+J*J);T*=P;J*=P;X.x+=T;X.y+=
J;F.x-=T;F.y-=J}var Da,Ka,da,na,wa,Ha,La,za;m.setTransform(1,0,0,-1,c,i);this.autoClear&&this.clear();f=e.projectScene(ga,sa,this.sortElements);(S=ga.lights.length>0)&&Ma(ga);Da=0;for(Ka=f.length;Da<Ka;Da++){da=f[Da];I.empty();if(da instanceof THREE.RenderableParticle){r=da;r.x*=c;r.y*=i;na=0;for(wa=da.materials.length;na<wa;na++)Na(r,da,da.materials[na],ga)}else if(da instanceof THREE.RenderableLine){r=da.v1;C=da.v2;r.positionScreen.x*=c;r.positionScreen.y*=i;C.positionScreen.x*=c;C.positionScreen.y*=
i;I.addPoint(r.positionScreen.x,r.positionScreen.y);I.addPoint(C.positionScreen.x,C.positionScreen.y);if(Z.instersects(I)){na=0;for(wa=da.materials.length;na<wa;)Oa(r,C,da,da.materials[na++],ga)}}else if(da instanceof THREE.RenderableFace3){r=da.v1;C=da.v2;d=da.v3;r.positionScreen.x*=c;r.positionScreen.y*=i;C.positionScreen.x*=c;C.positionScreen.y*=i;d.positionScreen.x*=c;d.positionScreen.y*=i;if(da.overdraw){Ga(r.positionScreen,C.positionScreen);Ga(C.positionScreen,d.positionScreen);Ga(d.positionScreen,
r.positionScreen)}I.add3Points(r.positionScreen.x,r.positionScreen.y,C.positionScreen.x,C.positionScreen.y,d.positionScreen.x,d.positionScreen.y);if(Z.instersects(I)){na=0;for(wa=da.meshMaterials.length;na<wa;){za=da.meshMaterials[na++];if(za instanceof THREE.MeshFaceMaterial){Ha=0;for(La=da.faceMaterials.length;Ha<La;)(za=da.faceMaterials[Ha++])&&Ia(r,C,d,da,za,ga)}else Ia(r,C,d,da,za,ga)}}}W.addRectangle(I)}m.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(V,O,ba){var R,L,N,Z;R=0;for(L=V.lights.length;R<L;R++){N=V.lights[R];if(N instanceof THREE.DirectionalLight){Z=O.normalWorld.dot(N.position)*N.intensity;if(Z>0){ba.r+=N.color.r*Z;ba.g+=N.color.g*Z;ba.b+=N.color.b*Z}}else if(N instanceof THREE.PointLight){w.sub(N.position,O.centroidWorld);w.normalize();Z=O.normalWorld.dot(w)*N.intensity;if(Z>0){ba.r+=N.color.r*Z;ba.g+=N.color.g*Z;ba.b+=N.color.b*Z}}}}function b(V,O,ba,R,L,N){x=e(D++);x.setAttribute("d","M "+
V.positionScreen.x+" "+V.positionScreen.y+" L "+O.positionScreen.x+" "+O.positionScreen.y+" L "+ba.positionScreen.x+","+ba.positionScreen.y+"z");if(L instanceof THREE.MeshBasicMaterial)d.__styleString=L.color.__styleString;else if(L instanceof THREE.MeshLambertMaterial)if(C){k.r=q.r;k.g=q.g;k.b=q.b;a(N,R,k);d.r=L.color.r*k.r;d.g=L.color.g*k.g;d.b=L.color.b*k.b;d.updateStyleString()}else d.__styleString=L.color.__styleString;else if(L instanceof THREE.MeshDepthMaterial){l=1-L.__2near/(L.__farPlusNear-
R.z*L.__farMinusNear);d.setRGB(l,l,l)}else L instanceof THREE.MeshNormalMaterial&&d.setRGB(g(R.normalWorld.x),g(R.normalWorld.y),g(R.normalWorld.z));L.wireframe?x.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+L.wireframe_linewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+L.wireframe_linecap+"; stroke-linejoin: "+L.wireframe_linejoin):x.setAttribute("style","fill: "+d.__styleString+"; fill-opacity: "+L.opacity);c.appendChild(x)}function f(V,O,ba,R,L,N,Z){x=
e(D++);x.setAttribute("d","M "+V.positionScreen.x+" "+V.positionScreen.y+" L "+O.positionScreen.x+" "+O.positionScreen.y+" L "+ba.positionScreen.x+","+ba.positionScreen.y+" L "+R.positionScreen.x+","+R.positionScreen.y+"z");if(N instanceof THREE.MeshBasicMaterial)d.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshLambertMaterial)if(C){k.r=q.r;k.g=q.g;k.b=q.b;a(Z,L,k);d.r=N.color.r*k.r;d.g=N.color.g*k.g;d.b=N.color.b*k.b;d.updateStyleString()}else d.__styleString=N.color.__styleString;
else if(N instanceof THREE.MeshDepthMaterial){l=1-N.__2near/(N.__farPlusNear-L.z*N.__farMinusNear);d.setRGB(l,l,l)}else N instanceof THREE.MeshNormalMaterial&&d.setRGB(g(L.normalWorld.x),g(L.normalWorld.y),g(L.normalWorld.z));N.wireframe?x.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+N.wireframe_linewidth+"; stroke-opacity: "+N.opacity+"; stroke-linecap: "+N.wireframe_linecap+"; stroke-linejoin: "+N.wireframe_linejoin):x.setAttribute("style","fill: "+d.__styleString+
"; fill-opacity: "+N.opacity);c.appendChild(x)}function e(V){if(u[V]==null){u[V]=document.createElementNS("http://www.w3.org/2000/svg","path");U==0&&u[V].setAttribute("shape-rendering","crispEdges");return u[V]}return u[V]}function g(V){return V<0?Math.min((1+V)*0.5,0.5):0.5+Math.min(V*0.5,0.5)}var h=null,j=new THREE.Projector,c=document.createElementNS("http://www.w3.org/2000/svg","svg"),i,m,s,B,p,v,y,A,K=new THREE.Rectangle,r=new THREE.Rectangle,C=false,d=new THREE.Color(16777215),k=new THREE.Color(16777215),
q=new THREE.Color(0),n=new THREE.Color(0),o=new THREE.Color(0),l,w=new THREE.Vector3,u=[],E=[],z=[],x,D,$,M,U=1;this.domElement=c;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(V){switch(V){case "high":U=1;break;case "low":U=0}};this.setSize=function(V,O){i=V;m=O;s=i/2;B=m/2;c.setAttribute("viewBox",-s+" "+-B+" "+i+" "+m);c.setAttribute("width",i);c.setAttribute("height",m);K.set(-s,-B,s,B)};this.clear=function(){for(;c.childNodes.length>0;)c.removeChild(c.childNodes[0])};
this.render=function(V,O){var ba,R,L,N,Z,W,I,S;this.autoClear&&this.clear();h=j.projectScene(V,O,this.sortElements);M=$=D=0;if(C=V.lights.length>0){I=V.lights;q.setRGB(0,0,0);n.setRGB(0,0,0);o.setRGB(0,0,0);ba=0;for(R=I.length;ba<R;ba++){L=I[ba];N=L.color;if(L instanceof THREE.AmbientLight){q.r+=N.r;q.g+=N.g;q.b+=N.b}else if(L instanceof THREE.DirectionalLight){n.r+=N.r;n.g+=N.g;n.b+=N.b}else if(L instanceof THREE.PointLight){o.r+=N.r;o.g+=N.g;o.b+=N.b}}}ba=0;for(R=h.length;ba<R;ba++){I=h[ba];r.empty();
if(I instanceof THREE.RenderableParticle){p=I;p.x*=s;p.y*=-B;L=0;for(N=I.materials.length;L<N;L++)if(S=I.materials[L]){Z=p;W=I;S=S;var Y=$++;if(E[Y]==null){E[Y]=document.createElementNS("http://www.w3.org/2000/svg","circle");U==0&&E[Y].setAttribute("shape-rendering","crispEdges")}x=E[Y];x.setAttribute("cx",Z.x);x.setAttribute("cy",Z.y);x.setAttribute("r",W.scale.x*s);if(S instanceof THREE.ParticleCircleMaterial){if(C){k.r=q.r+n.r+o.r;k.g=q.g+n.g+o.g;k.b=q.b+n.b+o.b;d.r=S.color.r*k.r;d.g=S.color.g*
k.g;d.b=S.color.b*k.b;d.updateStyleString()}else d=S.color;x.setAttribute("style","fill: "+d.__styleString)}c.appendChild(x)}}else if(I instanceof THREE.RenderableLine){p=I.v1;v=I.v2;p.positionScreen.x*=s;p.positionScreen.y*=-B;v.positionScreen.x*=s;v.positionScreen.y*=-B;r.addPoint(p.positionScreen.x,p.positionScreen.y);r.addPoint(v.positionScreen.x,v.positionScreen.y);if(K.instersects(r)){L=0;for(N=I.materials.length;L<N;)if(S=I.materials[L++]){Z=p;W=v;S=S;Y=M++;if(z[Y]==null){z[Y]=document.createElementNS("http://www.w3.org/2000/svg",
"line");U==0&&z[Y].setAttribute("shape-rendering","crispEdges")}x=z[Y];x.setAttribute("x1",Z.positionScreen.x);x.setAttribute("y1",Z.positionScreen.y);x.setAttribute("x2",W.positionScreen.x);x.setAttribute("y2",W.positionScreen.y);if(S instanceof THREE.LineBasicMaterial){d.__styleString=S.color.__styleString;x.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+S.linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.linecap+"; stroke-linejoin: "+S.linejoin);c.appendChild(x)}}}}else if(I instanceof
THREE.RenderableFace3){p=I.v1;v=I.v2;y=I.v3;p.positionScreen.x*=s;p.positionScreen.y*=-B;v.positionScreen.x*=s;v.positionScreen.y*=-B;y.positionScreen.x*=s;y.positionScreen.y*=-B;r.addPoint(p.positionScreen.x,p.positionScreen.y);r.addPoint(v.positionScreen.x,v.positionScreen.y);r.addPoint(y.positionScreen.x,y.positionScreen.y);if(K.instersects(r)){L=0;for(N=I.meshMaterials.length;L<N;){S=I.meshMaterials[L++];if(S instanceof THREE.MeshFaceMaterial){Z=0;for(W=I.faceMaterials.length;Z<W;)(S=I.faceMaterials[Z++])&&
b(p,v,y,I,S,V)}else S&&b(p,v,y,I,S,V)}}}else if(I instanceof THREE.RenderableFace4){p=I.v1;v=I.v2;y=I.v3;A=I.v4;p.positionScreen.x*=s;p.positionScreen.y*=-B;v.positionScreen.x*=s;v.positionScreen.y*=-B;y.positionScreen.x*=s;y.positionScreen.y*=-B;A.positionScreen.x*=s;A.positionScreen.y*=-B;r.addPoint(p.positionScreen.x,p.positionScreen.y);r.addPoint(v.positionScreen.x,v.positionScreen.y);r.addPoint(y.positionScreen.x,y.positionScreen.y);r.addPoint(A.positionScreen.x,A.positionScreen.y);if(K.instersects(r)){L=
0;for(N=I.meshMaterials.length;L<N;){S=I.meshMaterials[L++];if(S instanceof THREE.MeshFaceMaterial){Z=0;for(W=I.faceMaterials.length;Z<W;)(S=I.faceMaterials[Z++])&&f(p,v,y,A,I,S,V)}else S&&f(p,v,y,A,I,S,V)}}}}}};
THREE.WebGLRenderer=function(a){function b(d,k){d.fragment_shader=k.fragment_shader;d.vertex_shader=k.vertex_shader;d.uniforms=Uniforms.clone(k.uniforms)}function f(d,k){d.uniforms.color.value.setRGB(d.color.r*d.opacity,d.color.g*d.opacity,d.color.b*d.opacity);d.uniforms.opacity.value=d.opacity;d.uniforms.map.texture=d.map;d.uniforms.env_map.texture=d.env_map;d.uniforms.reflectivity.value=d.reflectivity;d.uniforms.refraction_ratio.value=d.refraction_ratio;d.uniforms.combine.value=d.combine;d.uniforms.useRefract.value=
d.env_map&&d.env_map.mapping instanceof THREE.CubeRefractionMapping;if(k){d.uniforms.fogColor.value.setHex(k.color.hex);if(k instanceof THREE.Fog){d.uniforms.fogNear.value=k.near;d.uniforms.fogFar.value=k.far}else if(k instanceof THREE.FogExp2)d.uniforms.fogDensity.value=k.density}}function e(d,k){d.uniforms.color.value.setRGB(d.color.r*d.opacity,d.color.g*d.opacity,d.color.b*d.opacity);d.uniforms.opacity.value=d.opacity;if(k){d.uniforms.fogColor.value.setHex(k.color.hex);if(k instanceof THREE.Fog){d.uniforms.fogNear.value=
k.near;d.uniforms.fogFar.value=k.far}else if(k instanceof THREE.FogExp2)d.uniforms.fogDensity.value=k.density}}function g(d,k){var q;if(d=="fragment")q=c.createShader(c.FRAGMENT_SHADER);else if(d=="vertex")q=c.createShader(c.VERTEX_SHADER);c.shaderSource(q,k);c.compileShader(q);if(!c.getShaderParameter(q,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(q));return null}return q}function h(d){switch(d){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;
case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}var j=document.createElement("canvas"),c,i=null,m=new THREE.Matrix4,s,B=new Float32Array(16),p=new Float32Array(16),v=new Float32Array(16),
y=new Float32Array(9),A=new Float32Array(16),K=true,r=new THREE.Color(0),C=0;if(a){if(a.antialias!==undefined)K=a.antialias;a.clearColor!==undefined&&r.setHex(a.clearColor);if(a.clearAlpha!==undefined)C=a.clearAlpha}this.domElement=j;this.autoClear=true;(function(d,k,q){try{c=j.getContext("experimental-webgl",{antialias:d})}catch(n){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);
c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(k.r,k.g,k.b,q)})(K,r,C);this.setSize=function(d,k){j.width=d;j.height=k;c.viewport(0,0,j.width,j.height)};this.setClearColor=function(d,k){var q=new THREE.Color(d);c.clearColor(q.r,q.g,q.b,k)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=function(d,k){var q,n,o,l=0,w=0,u=0,E=[],z=[],x=[],D=[];q=0;for(n=k.length;q<n;q++){o=k[q];if(o instanceof THREE.AmbientLight){l+=
o.color.r;w+=o.color.g;u+=o.color.b}else if(o instanceof THREE.DirectionalLight){E.push(o.color.r*o.intensity,o.color.g*o.intensity,o.color.b*o.intensity);z.push(o.position.x,o.position.y,o.position.z)}else if(o instanceof THREE.PointLight){x.push(o.color.r*o.intensity,o.color.g*o.intensity,o.color.b*o.intensity);D.push(o.position.x,o.position.y,o.position.z)}}return{ambient:[l,w,u],directional:{colors:E,positions:z},point:{colors:x,positions:D}}};this.createLineBuffers=function(d){var k,q,n,o=[],
l=[],w=d.geometry.vertices;k=0;for(q=w.length;k<q;k++){n=w[k].position;o.push(n.x,n.y,n.z);if(d.type==THREE.LineContinuous)k<q-1&&l.push(k,k+1);else l.push(k)}if(o.length){d.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,d.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(o),c.STATIC_DRAW);d.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(l),c.STATIC_DRAW);d.__webGLLineCount=
l.length}};this.createBuffers=function(d,k){var q,n,o,l,w,u,E,z,x,D,$=[],M=[],U=[],V=[],O=[],ba=[],R=0,L=d.geometry.geometryChunks[k],N;w=false;q=0;for(n=d.materials.length;q<n;q++){u=d.materials[q];if(u instanceof THREE.MeshFaceMaterial){u=0;for(N=L.materials.length;u<N;u++)if(L.materials[u]&&L.materials[u].shading!=undefined&&L.materials[u].shading==THREE.SmoothShading){w=true;break}}else if(u&&u.shading!=undefined&&u.shading==THREE.SmoothShading){w=true;break}if(w)break}N=w;q=0;for(n=L.faces.length;q<
n;q++){o=L.faces[q];l=d.geometry.faces[o];w=l.vertexNormals;u=l.normal;o=d.geometry.uvs[o];if(l instanceof THREE.Face3){E=d.geometry.vertices[l.a].position;z=d.geometry.vertices[l.b].position;x=d.geometry.vertices[l.c].position;U.push(E.x,E.y,E.z,z.x,z.y,z.z,x.x,x.y,x.z);if(d.geometry.hasTangents){E=d.geometry.vertices[l.a].tangent;z=d.geometry.vertices[l.b].tangent;x=d.geometry.vertices[l.c].tangent;O.push(E.x,E.y,E.z,E.w,z.x,z.y,z.z,z.w,x.x,x.y,x.z,x.w)}if(w.length==3&&N)for(l=0;l<3;l++)V.push(w[l].x,
w[l].y,w[l].z);else for(l=0;l<3;l++)V.push(u.x,u.y,u.z);if(o)for(l=0;l<3;l++)ba.push(o[l].u,o[l].v);$.push(R,R+1,R+2);M.push(R,R+1,R,R+2,R+1,R+2);R+=3}else if(l instanceof THREE.Face4){E=d.geometry.vertices[l.a].position;z=d.geometry.vertices[l.b].position;x=d.geometry.vertices[l.c].position;D=d.geometry.vertices[l.d].position;U.push(E.x,E.y,E.z,z.x,z.y,z.z,x.x,x.y,x.z,D.x,D.y,D.z);if(d.geometry.hasTangents){E=d.geometry.vertices[l.a].tangent;z=d.geometry.vertices[l.b].tangent;x=d.geometry.vertices[l.c].tangent;
l=d.geometry.vertices[l.d].tangent;O.push(E.x,E.y,E.z,E.w,z.x,z.y,z.z,z.w,x.x,x.y,x.z,x.w,l.x,l.y,l.z,l.w)}if(w.length==4&&N)for(l=0;l<4;l++)V.push(w[l].x,w[l].y,w[l].z);else for(l=0;l<4;l++)V.push(u.x,u.y,u.z);if(o)for(l=0;l<4;l++)ba.push(o[l].u,o[l].v);$.push(R,R+1,R+2,R,R+2,R+3);M.push(R,R+1,R,R+2,R,R+3,R+1,R+2,R+2,R+3);R+=4}}if(U.length){L.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(U),c.STATIC_DRAW);L.__webGLNormalBuffer=
c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(V),c.STATIC_DRAW);if(d.geometry.hasTangents){L.__webGLTangentBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(O),c.STATIC_DRAW)}if(ba.length>0){L.__webGLUVBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(ba),c.STATIC_DRAW)}L.__webGLFaceBuffer=c.createBuffer();
c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,L.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array($),c.STATIC_DRAW);L.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,L.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(M),c.STATIC_DRAW);L.__webGLFaceCount=$.length;L.__webGLLineCount=M.length}};this.renderBuffer=function(d,k,q,n,o){var l,w,u,E;if(!n.program){if(n instanceof THREE.MeshDepthMaterial){b(n,THREE.ShaderLib.depth);n.uniforms.mNear.value=
d.near;n.uniforms.mFar.value=d.far}else if(n instanceof THREE.MeshNormalMaterial)b(n,THREE.ShaderLib.normal);else if(n instanceof THREE.MeshBasicMaterial){b(n,THREE.ShaderLib.basic);f(n,q)}else if(n instanceof THREE.MeshLambertMaterial){b(n,THREE.ShaderLib.lambert);f(n,q)}else if(n instanceof THREE.MeshPhongMaterial){b(n,THREE.ShaderLib.phong);f(n,q)}else if(n instanceof THREE.LineBasicMaterial){b(n,THREE.ShaderLib.basic);e(n,q)}if(scene){var z,x,D;z=E=w=0;for(x=k.length;z<x;z++){D=k[z];D instanceof
THREE.DirectionalLight&&E++;D instanceof THREE.PointLight&&w++}if(w+E<=4){z=E;w=w}else{z=Math.ceil(4*E/(w+E));w=4-z}w={directional:z,point:w}}else w={directional:1,point:3};E={fog:q,map:n.map,env_map:n.env_map,maxDirLights:w.directional,maxPointLights:w.point};w=n.fragment_shader;z=n.vertex_shader;x=c.createProgram();D=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+E.maxDirLights,"#define MAX_POINT_LIGHTS "+E.maxPointLights,E.fog?"#define USE_FOG":"",E.fog instanceof THREE.FogExp2?
"#define FOG_EXP2":"",E.map?"#define USE_MAP":"",E.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");E=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+E.maxDirLights,"#define MAX_POINT_LIGHTS "+E.maxPointLights,E.map?"#define USE_MAP":"",E.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
c.attachShader(x,g("fragment",D+w));c.attachShader(x,g("vertex",E+z));c.linkProgram(x);c.getProgramParameter(x,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(x,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");x.uniforms={};x.attributes={};n.program=x;w=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(l in n.uniforms)w.push(l);l=n.program;z=0;for(x=w.length;z<x;z++){D=w[z];l.uniforms[D]=c.getUniformLocation(l,
D)}l=n.program;w=["position","normal","uv","tangent"];z=0;for(x=w.length;z<x;z++){D=w[z];l.attributes[D]=c.getAttribLocation(l,D)}}l=n.program;if(l!=i){c.useProgram(l);i=l}this.loadCamera(l,d);this.loadMatrices(l);if(n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial){d=this.setupLights(l,k);n.uniforms.enableLighting.value=d.directional.positions.length+d.point.positions.length;n.uniforms.ambientLightColor.value=d.ambient;n.uniforms.directionalLightColor.value=d.directional.colors;
n.uniforms.directionalLightDirection.value=d.directional.positions;n.uniforms.pointLightColor.value=d.point.colors;n.uniforms.pointLightPosition.value=d.point.positions}if(n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)f(n,q);n instanceof THREE.LineBasicMaterial&&e(n,q);if(n instanceof THREE.MeshPhongMaterial){n.uniforms.ambient.value.setRGB(n.ambient.r,n.ambient.g,n.ambient.b);n.uniforms.specular.value.setRGB(n.specular.r,n.specular.g,
n.specular.b);n.uniforms.shininess.value=n.shininess}q=n.uniforms;for(u in q){k=q[u].type;d=q[u].value;w=l.uniforms[u];if(k=="i")c.uniform1i(w,d);else if(k=="f")c.uniform1f(w,d);else if(k=="fv")c.uniform3fv(w,d);else if(k=="v2")c.uniform2f(w,d.x,d.y);else if(k=="v3")c.uniform3f(w,d.x,d.y,d.z);else if(k=="c")c.uniform3f(w,d.r,d.g,d.b);else if(k=="t"){c.uniform1i(w,d);if(k=q[u].texture)if(k.image instanceof Array&&k.image.length==6){k=k;d=d;if(k.image.length==6){if(!k.image.__webGLTextureCube&&!k.image.__cubeMapInitialized&&
k.image.loadCount==6){k.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webGLTextureCube);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(w=0;w<6;++w)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+w,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,
k.image[w]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);k.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webGLTextureCube)}}else{k=k;d=d;if(!k.__webGLTexture&&k.image.loaded){k.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,k.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,k.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,h(k.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,
h(k.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,h(k.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,h(k.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_2D,k.__webGLTexture)}}}u=l.attributes;c.bindBuffer(c.ARRAY_BUFFER,o.__webGLVertexBuffer);c.vertexAttribPointer(u.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(u.position);if(u.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,o.__webGLNormalBuffer);
c.vertexAttribPointer(u.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(u.normal)}if(u.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,o.__webGLTangentBuffer);c.vertexAttribPointer(u.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(u.tangent)}if(u.uv>=0)if(o.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,o.__webGLUVBuffer);c.vertexAttribPointer(u.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(u.uv)}else c.disableVertexAttribArray(u.uv);if(n.wireframe||n instanceof THREE.LineBasicMaterial){n=
n.wireframe_linewidth!==undefined?n.wireframe_linewidth:n.linewidth!==undefined?n.linewidth:1;c.lineWidth(n);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,o.__webGLLineBuffer);c.drawElements(c.LINES,o.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,o.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,o.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(d,k,q,n,o,l,w){var u,E,z,x,D;z=0;for(x=n.materials.length;z<x;z++){u=n.materials[z];if(u instanceof THREE.MeshFaceMaterial){u=
0;for(E=o.materials.length;u<E;u++)if((D=o.materials[u])&&D.blending==l&&D.opacity<1==w){this.setBlending(D.blending);this.renderBuffer(d,k,q,D,o)}}else if((D=u)&&D.blending==l&&D.opacity<1==w){this.setBlending(D.blending);this.renderBuffer(d,k,q,D,o)}}};this.renderPassLines=function(d,k,q,n){var o,l,w;o=0;for(l=n.materials.length;o<l;o++){w=n.materials[o];this.setBlending(w.blending);this.renderBuffer(d,k,q,w,n)}};this.render=function(d,k){var q,n,o,l,w=d.lights,u=d.fog;this.initWebGLObjects(d);
this.autoClear&&this.clear();k.autoUpdateMatrix&&k.updateMatrix();B.set(k.matrix.flatten());v.set(k.projectionMatrix.flatten());q=0;for(n=d.__webGLLines.length;q<n;q++){o=d.__webGLLines[q];l=o.object;if(l.visible){this.setupMatrices(l,k);this.renderPassLines(k,w,u,l)}}q=0;for(n=d.__webGLObjects.length;q<n;q++){o=d.__webGLObjects[q];l=o.object;o=o.buffer;if(l.visible){this.setupMatrices(l,k);this.renderPass(k,w,u,l,o,THREE.NormalBlending,false)}}q=0;for(n=d.__webGLObjects.length;q<n;q++){o=d.__webGLObjects[q];
l=o.object;o=o.buffer;if(l.visible){this.setupMatrices(l,k);this.renderPass(k,w,u,l,o,THREE.AdditiveBlending,false);this.renderPass(k,w,u,l,o,THREE.SubtractiveBlending,false);this.renderPass(k,w,u,l,o,THREE.AdditiveBlending,true);this.renderPass(k,w,u,l,o,THREE.SubtractiveBlending,true);this.renderPass(k,w,u,l,o,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(d){var k,q,n,o,l,w;if(!d.__webGLObjects){d.__webGLObjects=[];d.__webGLObjectsMap={}}if(!d.__webGLLines){d.__webGLLines=[];d.__webGLLinesMap=
{}}k=0;for(q=d.objects.length;k<q;k++){n=d.objects[k];if(n instanceof THREE.Mesh){if(d.__webGLObjectsMap[n.id]==undefined)d.__webGLObjectsMap[n.id]={};w=d.__webGLObjectsMap[n.id];for(l in n.geometry.geometryChunks){o=n.geometry.geometryChunks[l];o.__webGLVertexBuffer||this.createBuffers(n,l);if(w[l]==undefined){o={buffer:o,object:n};d.__webGLObjects.push(o);w[l]=1}}}else if(n instanceof THREE.Line){if(d.__webGLLinesMap[n.id]==undefined)d.__webGLLinesMap[n.id]={};lmap=d.__webGLLinesMap[n.id];n.__webGLVertexBuffer||
this.createLineBuffers(n);l=0;if(lmap[l]==undefined){o={object:n};d.__webGLLines.push(o);lmap[l]=1}}}};this.removeObject=function(d,k){var q,n;for(q=d.__webGLObjects.length-1;q>=0;q--){n=d.__webGLObjects[q].object;k==n&&d.__webGLObjects.splice(q,1)}};this.setupMatrices=function(d,k){d.autoUpdateMatrix&&d.updateMatrix();m.multiply(k.matrix,d.matrix);p.set(m.flatten());s=THREE.Matrix4.makeInvert3x3(m).transpose();y.set(s.m);A.set(d.matrix.flatten())};this.loadMatrices=function(d){c.uniformMatrix4fv(d.uniforms.viewMatrix,
false,B);c.uniformMatrix4fv(d.uniforms.modelViewMatrix,false,p);c.uniformMatrix4fv(d.uniforms.projectionMatrix,false,v);c.uniformMatrix3fv(d.uniforms.normalMatrix,false,y);c.uniformMatrix4fv(d.uniforms.objectMatrix,false,A)};this.loadCamera=function(d,k){c.uniform3f(d.uniforms.cameraPosition,k.position.x,k.position.y,k.position.z)};this.setBlending=function(d){switch(d){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,
c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(d,k){if(d){!k||k=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(d=="back")c.cullFace(c.BACK);else d=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",
map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,b){var f=b instanceof THREE.Mesh,e=a.vertices.length,g=f?b.geometry:b,h=a.vertices,j=g.vertices,c=a.faces,i=g.faces,m=a.uvs;g=g.uvs;f&&b.updateMatrix();for(var s=0,B=j.length;s<B;s++){var p=new THREE.Vertex(j[s].position.clone());f&&b.matrix.multiplyVector3(p.position);h.push(p)}s=0;for(B=i.length;s<B;s++){j=i[s];var v,y=j.vertexNormals;if(j instanceof THREE.Face3)v=new THREE.Face3(j.a+e,j.b+e,j.c+e);else if(j instanceof THREE.Face4)v=new THREE.Face4(j.a+e,j.b+
e,j.c+e,j.d+e);v.centroid.copy(j.centroid);v.normal.copy(j.normal);f=0;for(h=y.length;f<h;f++){p=y[f];v.vertexNormals.push(p.clone())}v.materials=j.materials.slice();c.push(v)}s=0;for(B=g.length;s<B;s++){e=g[s];c=[];f=0;for(h=e.length;f<h;f++)c.push(new THREE.UV(e[f].u,e[f].v));m.push(c)}}},ImageUtils={loadTexture:function(a,b){var f=new Image;f.onload=function(){this.loaded=true};f.src=a;return new THREE.Texture(f,b)},loadArray:function(a){var b,f,e=[];b=e.loadCount=0;for(f=a.length;b<f;++b){e[b]=
new Image;e[b].loaded=0;e[b].onload=function(){e.loadCount+=1;this.loaded=true};e[b].src=a[b]}return e}},SceneUtils={addMesh:function(a,b,f,e,g,h,j,c,i,m){b=new THREE.Mesh(b,m);b.scale.x=b.scale.y=b.scale.z=f;b.position.x=e;b.position.y=g;b.position.z=h;b.rotation.x=j;b.rotation.y=c;b.rotation.z=i;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,f){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=f;f=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,
uniforms:e.uniforms});b=new THREE.Mesh(new Cube(b,b,b,1,1,null,true),f);a.addObject(b);return b},addPanoramaCube:function(a,b,f){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[5])}));
b=new THREE.Mesh(new Cube(b,b,b,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,f){var e=b/2;b=new Plane(b,b);var g=Math.PI/2,h=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[5])}));SceneUtils.addMesh(a,b,1,-e,0,0,0,g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[0])}));SceneUtils.addMesh(a,b,1,e,0,0,0,-g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[1])}));SceneUtils.addMesh(a,
b,1,0,e,0,g,0,h,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[2])}));SceneUtils.addMesh(a,b,1,0,-e,0,-g,0,h,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,b,f,e,g,h,j,c){function i(A,K,r,C,d,k,q,n){var o,l,w=e||1,u=g||1,E=w+1,z=u+1,x=d/2,D=k/2;d=d/w;var $=k/u,M=m.vertices.length;if(A=="x"&&K=="y"||A=="y"&&K=="x")o="z";else if(A=="x"&&K=="z"||A=="z"&&K=="x")o="y";else if(A=="z"&&K=="y"||A=="y"&&K=="z")o="x";for(l=0;l<z;l++)for(k=0;k<
E;k++){var U=new THREE.Vector3;U[A]=(k*d-x)*r;U[K]=(l*$-D)*C;U[o]=q;m.vertices.push(new THREE.Vertex(U))}for(l=0;l<u;l++)for(k=0;k<w;k++){m.faces.push(new THREE.Face4(k+E*l+M,k+E*(l+1)+M,k+1+E*(l+1)+M,k+1+E*l+M,null,n));m.uvs.push([new THREE.UV(k/w,l/u),new THREE.UV(k/w,(l+1)/u),new THREE.UV((k+1)/w,(l+1)/u),new THREE.UV((k+1)/w,l/u)])}}THREE.Geometry.call(this);var m=this,s=a/2,B=b/2,p=f/2;j=j?-1:1;if(h!==undefined)if(h instanceof Array)this.materials=h;else{this.materials=[];for(var v=0;v<6;v++)this.materials.push([h])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(c!=undefined)for(var y in c)if(this.sides[y]!=undefined)this.sides[y]=c[y];this.sides.px&&i("z","y",1*j,-1,f,b,-s,this.materials[0]);this.sides.nx&&i("z","y",-1*j,-1,f,b,s,this.materials[1]);this.sides.py&&i("x","z",1*j,1,a,f,B,this.materials[2]);this.sides.ny&&i("x","z",1*j,-1,a,f,-B,this.materials[3]);this.sides.pz&&i("x","y",1*j,-1,a,b,p,this.materials[4]);this.sides.nz&&i("x","y",-1*j,-1,a,b,-p,this.materials[5]);(function(){for(var A=
[],K=[],r=0,C=m.vertices.length;r<C;r++){for(var d=m.vertices[r],k=false,q=0,n=A.length;q<n;q++){var o=A[q];if(d.position.x==o.position.x&&d.position.y==o.position.y&&d.position.z==o.position.z){K[r]=q;k=true;break}}if(!k){K[r]=A.length;A.push(new THREE.Vertex(d.position.clone()))}}r=0;for(C=m.faces.length;r<C;r++){d=m.faces[r];d.a=K[d.a];d.b=K[d.b];d.c=K[d.c];d.d=K[d.d]}m.vertices=A})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,f,e,g){function h(m,s,B){j.vertices.push(new THREE.Vertex(new THREE.Vector3(m,s,B)))}THREE.Geometry.call(this);var j=this,c=Math.PI,i;for(i=0;i<a;i++)h(Math.sin(2*c*i/a)*b,Math.cos(2*c*i/a)*b,0);for(i=0;i<a;i++)h(Math.sin(2*c*i/a)*f,Math.cos(2*c*i/a)*f,e);for(i=0;i<a;i++)j.faces.push(new THREE.Face4(i,i+a,a+(i+1)%a,(i+1)%a));if(f!=0){h(0,0,-g);for(i=a;i<a+a/2;i++)j.faces.push(new THREE.Face4(2*a,(2*i-2*a)%a,(2*i-2*a+1)%a,(2*i-2*a+2)%a))}if(b!=0){h(0,0,e+g);for(i=a+a/2;i<
2*a;i++)j.faces.push(new THREE.Face4((2*i-2*a+2)%a+a,(2*i-2*a+1)%a+a,(2*i-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,f,e){THREE.Geometry.call(this);var g,h=a/2,j=b/2;f=f||1;e=e||1;var c=f+1,i=e+1;a=a/f;var m=b/e;for(g=0;g<i;g++)for(b=0;b<c;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-h,-(g*m-j),0)));for(g=0;g<e;g++)for(b=0;b<f;b++){this.faces.push(new THREE.Face4(b+c*g,b+c*(g+1),b+1+c*(g+1),b+1+c*g));this.uvs.push([new THREE.UV(b/f,g/e),new THREE.UV(b/f,(g+1)/e),new THREE.UV((b+1)/f,(g+1)/e),new THREE.UV((b+1)/f,g/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,f){THREE.Geometry.call(this);var e,g=Math.PI,h=Math.max(3,b||8),j=Math.max(2,f||6);b=[];for(f=0;f<j+1;f++){e=f/j;var c=a*Math.cos(e*g),i=a*Math.sin(e*g),m=[],s=0;for(e=0;e<h;e++){var B=2*e/h,p=i*Math.sin(B*g);B=i*Math.cos(B*g);(f==0||f==j)&&e>0||(s=this.vertices.push(new THREE.Vertex(new THREE.Vector3(B,c,p)))-1);m.push(s)}b.push(m)}var v,y,A;g=b.length;for(f=0;f<g;f++){h=b[f].length;if(f>0)for(e=0;e<h;e++){m=e==h-1;j=b[f][m?0:e+1];c=b[f][m?h-1:e];i=b[f-1][m?h-1:e];m=b[f-1][m?
0:e+1];p=f/(g-1);v=(f-1)/(g-1);y=(e+1)/h;B=e/h;s=new THREE.UV(1-y,p);p=new THREE.UV(1-B,p);B=new THREE.UV(1-B,v);var K=new THREE.UV(1-y,v);if(f<b.length-1){v=this.vertices[j].position.clone();y=this.vertices[c].position.clone();A=this.vertices[i].position.clone();v.normalize();y.normalize();A.normalize();this.faces.push(new THREE.Face3(j,c,i,[new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([s,p,B])}if(f>1){v=this.vertices[j].position.clone();
y=this.vertices[i].position.clone();A=this.vertices[m].position.clone();v.normalize();y.normalize();A.normalize();this.faces.push(new THREE.Face3(j,i,m,[new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([s,B,K])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var f=document.createElement("script");f.type="text/javascript";f.onload=b;f.src=a;document.getElementsByTagName("head")[0].appendChild(f)},loadAscii:function(a){var b=a.model,f=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);b.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,f,e)};b.postMessage(a)},loadBinary:function(a){var b=a.model,f=a.callback,e=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(b),g=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);var h=this.showProgress?THREE.Loader.prototype.updateProgress:null;b.onmessage=function(j){THREE.Loader.prototype.loadAjaxBuffers(j.data.buffers,j.data.materials,f,g,e,h)};b.onerror=function(j){alert("worker.onerror: "+j.message+"\n"+j.data);j.preventDefault()};b.postMessage(a)},loadAjaxBuffers:function(a,b,f,e,g,h){var j=new XMLHttpRequest,c=e+"/"+a,i=0;
j.onreadystatechange=function(){if(j.readyState==4)j.status==200||j.status==0?THREE.Loader.prototype.createBinModel(j.responseText,f,g,b):alert("Couldn't load ["+c+"] ["+j.status+"]");else if(j.readyState==3){if(h){if(i==0)i=j.getResponseHeader("Content-Length");h({total:i,loaded:j.responseText.length})}}else if(j.readyState==2)i=j.getResponseHeader("Content-Length")};j.open("GET",c,true);j.overrideMimeType("text/plain; charset=x-user-defined");j.setRequestHeader("Content-Type","text/plain");j.send(null)},
createBinModel:function(a,b,f,e){var g=function(h){function j(t,G){var H=s(t,G),Q=s(t,G+1),aa=s(t,G+2),ka=s(t,G+3),ea=(ka<<1&255|aa>>7)-127;H=(aa&127)<<16|Q<<8|H;if(H==0&&ea==-127)return 0;return(1-2*(ka>>7))*(1+H*Math.pow(2,-23))*Math.pow(2,ea)}function c(t,G){var H=s(t,G),Q=s(t,G+1),aa=s(t,G+2);return(s(t,G+3)<<24)+(aa<<16)+(Q<<8)+H}function i(t,G){var H=s(t,G);return(s(t,G+1)<<8)+H}function m(t,G){var H=s(t,G);return H>127?H-256:H}function s(t,G){return t.charCodeAt(G)&255}function B(t){var G,
H,Q;G=c(a,t);H=c(a,t+n);Q=c(a,t+o);t=i(a,t+l);THREE.Loader.prototype.f3(r,G,H,Q,t)}function p(t){var G,H,Q,aa,ka,ea;G=c(a,t);H=c(a,t+n);Q=c(a,t+o);aa=i(a,t+l);ka=c(a,t+w);ea=c(a,t+u);t=c(a,t+E);THREE.Loader.prototype.f3n(r,k,G,H,Q,aa,ka,ea,t)}function v(t){var G,H,Q,aa;G=c(a,t);H=c(a,t+z);Q=c(a,t+x);aa=c(a,t+D);t=i(a,t+$);THREE.Loader.prototype.f4(r,G,H,Q,aa,t)}function y(t){var G,H,Q,aa,ka,ea,ra,ta;G=c(a,t);H=c(a,t+z);Q=c(a,t+x);aa=c(a,t+D);ka=i(a,t+$);ea=c(a,t+M);ra=c(a,t+U);ta=c(a,t+V);t=c(a,t+
O);THREE.Loader.prototype.f4n(r,k,G,H,Q,aa,ka,ea,ra,ta,t)}function A(t){var G,H;G=c(a,t);H=c(a,t+ba);t=c(a,t+R);THREE.Loader.prototype.uv3(r,q[G*2],q[G*2+1],q[H*2],q[H*2+1],q[t*2],q[t*2+1])}function K(t){var G,H,Q;G=c(a,t);H=c(a,t+L);Q=c(a,t+N);t=c(a,t+Z);THREE.Loader.prototype.uv4(r,q[G*2],q[G*2+1],q[H*2],q[H*2+1],q[Q*2],q[Q*2+1],q[t*2],q[t*2+1])}var r=this,C=0,d,k=[],q=[],n,o,l,w,u,E,z,x,D,$,M,U,V,O,ba,R,L,N,Z,W,I,S,Y,ha,ja;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(r,e,h);
d={signature:a.substr(C,8),header_bytes:s(a,C+8),vertex_coordinate_bytes:s(a,C+9),normal_coordinate_bytes:s(a,C+10),uv_coordinate_bytes:s(a,C+11),vertex_index_bytes:s(a,C+12),normal_index_bytes:s(a,C+13),uv_index_bytes:s(a,C+14),material_index_bytes:s(a,C+15),nvertices:c(a,C+16),nnormals:c(a,C+16+4),nuvs:c(a,C+16+8),ntri_flat:c(a,C+16+12),ntri_smooth:c(a,C+16+16),ntri_flat_uv:c(a,C+16+20),ntri_smooth_uv:c(a,C+16+24),nquad_flat:c(a,C+16+28),nquad_smooth:c(a,C+16+32),nquad_flat_uv:c(a,C+16+36),nquad_smooth_uv:c(a,
C+16+40)};C+=d.header_bytes;n=d.vertex_index_bytes;o=d.vertex_index_bytes*2;l=d.vertex_index_bytes*3;w=d.vertex_index_bytes*3+d.material_index_bytes;u=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes;E=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes*2;z=d.vertex_index_bytes;x=d.vertex_index_bytes*2;D=d.vertex_index_bytes*3;$=d.vertex_index_bytes*4;M=d.vertex_index_bytes*4+d.material_index_bytes;U=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes;
V=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes*2;O=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes*3;ba=d.uv_index_bytes;R=d.uv_index_bytes*2;L=d.uv_index_bytes;N=d.uv_index_bytes*2;Z=d.uv_index_bytes*3;h=d.vertex_index_bytes*3+d.material_index_bytes;ja=d.vertex_index_bytes*4+d.material_index_bytes;W=d.ntri_flat*h;I=d.ntri_smooth*(h+d.normal_index_bytes*3);S=d.ntri_flat_uv*(h+d.uv_index_bytes*3);Y=d.ntri_smooth_uv*(h+d.normal_index_bytes*3+d.uv_index_bytes*
3);ha=d.nquad_flat*ja;h=d.nquad_smooth*(ja+d.normal_index_bytes*4);ja=d.nquad_flat_uv*(ja+d.uv_index_bytes*4);C+=function(t){var G,H,Q,aa=d.vertex_coordinate_bytes*3,ka=t+d.nvertices*aa;for(t=t;t<ka;t+=aa){G=j(a,t);H=j(a,t+d.vertex_coordinate_bytes);Q=j(a,t+d.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(r,G,H,Q)}return d.nvertices*aa}(C);C+=function(t){var G,H,Q,aa=d.normal_coordinate_bytes*3,ka=t+d.nnormals*aa;for(t=t;t<ka;t+=aa){G=m(a,t);H=m(a,t+d.normal_coordinate_bytes);Q=m(a,t+d.normal_coordinate_bytes*
2);k.push(G/127,H/127,Q/127)}return d.nnormals*aa}(C);C+=function(t){var G,H,Q=d.uv_coordinate_bytes*2,aa=t+d.nuvs*Q;for(t=t;t<aa;t+=Q){G=j(a,t);H=j(a,t+d.uv_coordinate_bytes);q.push(G,H)}return d.nuvs*Q}(C);C=C;W=C+W;I=W+I;S=I+S;Y=S+Y;ha=Y+ha;h=ha+h;ja=h+ja;(function(t){var G,H=d.vertex_index_bytes*3+d.material_index_bytes,Q=H+d.uv_index_bytes*3,aa=t+d.ntri_flat_uv*Q;for(G=t;G<aa;G+=Q){B(G);A(G+H)}return aa-t})(I);(function(t){var G,H=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes*
3,Q=H+d.uv_index_bytes*3,aa=t+d.ntri_smooth_uv*Q;for(G=t;G<aa;G+=Q){p(G);A(G+H)}return aa-t})(S);(function(t){var G,H=d.vertex_index_bytes*4+d.material_index_bytes,Q=H+d.uv_index_bytes*4,aa=t+d.nquad_flat_uv*Q;for(G=t;G<aa;G+=Q){v(G);K(G+H)}return aa-t})(h);(function(t){var G,H=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes*4,Q=H+d.uv_index_bytes*4,aa=t+d.nquad_smooth_uv*Q;for(G=t;G<aa;G+=Q){y(G);K(G+H)}return aa-t})(ja);(function(t){var G,H=d.vertex_index_bytes*3+d.material_index_bytes,
Q=t+d.ntri_flat*H;for(G=t;G<Q;G+=H)B(G);return Q-t})(C);(function(t){var G,H=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes*3,Q=t+d.ntri_smooth*H;for(G=t;G<Q;G+=H)p(G);return Q-t})(W);(function(t){var G,H=d.vertex_index_bytes*4+d.material_index_bytes,Q=t+d.nquad_flat*H;for(G=t;G<Q;G+=H)v(G);return Q-t})(Y);(function(t){var G,H=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes*4,Q=t+d.nquad_smooth*H;for(G=t;G<Q;G+=H)y(G);return Q-t})(ha);this.computeCentroids();
this.computeFaceNormals();this.sortFacesByMaterial()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;b(new g(f))},createModel:function(a,b,f){var e=function(g){var h=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(h,a.materials,g);(function(){var j,c,i,m,s;j=0;for(c=a.vertices.length;j<c;j+=3){i=a.vertices[j];m=a.vertices[j+1];s=a.vertices[j+2];THREE.Loader.prototype.v(h,i,m,s)}})();(function(){function j(y,A){THREE.Loader.prototype.f3(h,y[A],y[A+1],y[A+2],y[A+3])}function c(y,
A){THREE.Loader.prototype.f3n(h,a.normals,y[A],y[A+1],y[A+2],y[A+3],y[A+4],y[A+5],y[A+6])}function i(y,A){THREE.Loader.prototype.f4(h,y[A],y[A+1],y[A+2],y[A+3],y[A+4])}function m(y,A){THREE.Loader.prototype.f4n(h,a.normals,y[A],y[A+1],y[A+2],y[A+3],y[A+4],y[A+5],y[A+6],y[A+7],y[A+8])}function s(y,A){var K,r,C;K=y[A];r=y[A+1];C=y[A+2];THREE.Loader.prototype.uv3(h,a.uvs[K*2],a.uvs[K*2+1],a.uvs[r*2],a.uvs[r*2+1],a.uvs[C*2],a.uvs[C*2+1])}function B(y,A){var K,r,C,d;K=y[A];r=y[A+1];C=y[A+2];d=y[A+3];THREE.Loader.prototype.uv4(h,
a.uvs[K*2],a.uvs[K*2+1],a.uvs[r*2],a.uvs[r*2+1],a.uvs[C*2],a.uvs[C*2+1],a.uvs[d*2],a.uvs[d*2+1])}var p,v;p=0;for(v=a.triangles_uv.length;p<v;p+=7){j(a.triangles_uv,p);s(a.triangles_uv,p+4)}p=0;for(v=a.triangles_n_uv.length;p<v;p+=10){c(a.triangles_n_uv,p);s(a.triangles_n_uv,p+7)}p=0;for(v=a.quads_uv.length;p<v;p+=9){i(a.quads_uv,p);B(a.quads_uv,p+5)}p=0;for(v=a.quads_n_uv.length;p<v;p+=13){m(a.quads_n_uv,p);B(a.quads_n_uv,p+9)}p=0;for(v=a.triangles.length;p<v;p+=4)j(a.triangles,p);p=0;for(v=a.triangles_n.length;p<
v;p+=7)c(a.triangles_n,p);p=0;for(v=a.quads.length;p<v;p+=5)i(a.quads,p);p=0;for(v=a.quads_n.length;p<v;p+=9)m(a.quads_n,p)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e(f))},v:function(a,b,f,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,f,e)))},f3:function(a,b,f,e,g){a.faces.push(new THREE.Face3(b,f,e,null,a.materials[g]))},f4:function(a,b,f,e,g,h){a.faces.push(new THREE.Face4(b,f,e,g,null,
a.materials[h]))},f3n:function(a,b,f,e,g,h,j,c,i){h=a.materials[h];var m=b[c*3],s=b[c*3+1];c=b[c*3+2];var B=b[i*3],p=b[i*3+1];i=b[i*3+2];a.faces.push(new THREE.Face3(f,e,g,[new THREE.Vector3(b[j*3],b[j*3+1],b[j*3+2]),new THREE.Vector3(m,s,c),new THREE.Vector3(B,p,i)],h))},f4n:function(a,b,f,e,g,h,j,c,i,m,s){j=a.materials[j];var B=b[i*3],p=b[i*3+1];i=b[i*3+2];var v=b[m*3],y=b[m*3+1];m=b[m*3+2];var A=b[s*3],K=b[s*3+1];s=b[s*3+2];a.faces.push(new THREE.Face4(f,e,g,h,[new THREE.Vector3(b[c*3],b[c*3+1],
b[c*3+2]),new THREE.Vector3(B,p,i),new THREE.Vector3(v,y,m),new THREE.Vector3(A,K,s)],j))},uv3:function(a,b,f,e,g,h,j){var c=[];c.push(new THREE.UV(b,f));c.push(new THREE.UV(e,g));c.push(new THREE.UV(h,j));a.uvs.push(c)},uv4:function(a,b,f,e,g,h,j,c,i){var m=[];m.push(new THREE.UV(b,f));m.push(new THREE.UV(e,g));m.push(new THREE.UV(h,j));m.push(new THREE.UV(c,i));a.uvs.push(m)},init_materials:function(a,b,f){a.materials=[];for(var e=0;e<b.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(b[e],
f)]},createMaterial:function(a,b){function f(h){h=Math.log(h)/Math.LN2;return Math.floor(h)==h}var e,g;if(a.map_diffuse&&b){g=document.createElement("canvas");e=new THREE.MeshLambertMaterial({map:new THREE.Texture(g)});g=new Image;g.onload=function(){if(!f(this.width)||!f(this.height)){var h=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),j=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));e.map.image.width=h;e.map.image.height=j;e.map.image.getContext("2d").drawImage(this,0,0,h,j)}else e.map.image=
this;e.map.image.loaded=1};g.src=b+"/"+a.map_diffuse}else if(a.col_diffuse){g=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;e=new THREE.MeshLambertMaterial({color:g,opacity:a.transparency})}else e=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});return e},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
